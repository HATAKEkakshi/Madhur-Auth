version: '3.8'
services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis-data:/data

  logging:
    image: madhurprakash/fastapi_logging:latest
    restart: unless-stopped
    ports:
      - "8000:8000"

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"

  kafka:
    image: hatakekakashihk/kafka:latest
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      - KAFKA_HOST=kafka

  kafka-setup:
    image: hatakekakashihk/kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c "
        sleep 15 &&
        /opt/kafka/bin/kafka-topics.sh --create --topic user_signups --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        /opt/kafka/bin/kafka-topics.sh --create --topic user_UID --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
      "

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka

  authentication:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8005:8005"
    volumes:
      - .:/authentication
    environment:
      - DEVELOPMENT_ENV=docker
    depends_on:
      - kafka-setup
      - redis
      - mongo
      - logging
    env_file:
      - .env
    command: >
      bash -c "
        echo 'Waiting 3 minutes for Kafka to be fully ready...' &&
        sleep 180 &&
        uvicorn app:app --host 0.0.0.0 --port 8005
      "

  kafka-config1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DEVELOPMENT_ENV=docker
    depends_on:
      - kafka-setup
      - redis
      - mongo
    command: ["python", "authentication/config/kafka1_config.py"]

  kafka-config2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DEVELOPMENT_ENV=docker
    depends_on:
      - kafka-setup
      - redis
      - mongo
    command: ["python", "authentication/config/kafka2_config.py"]

volumes:
  mongo-data:
  redis-data: