version: '3'
services:

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   networks:
  #     - app-network

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  #   depends_on:
  #     - mongo
  #   networks:
  #     - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    # networks:
    #   - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    # networks:
    #   - app-network
    
  # redis:
  #   image: redis
  #   ports:
  #     - "6379:6379"
  #     - "8001:8001"
  #   restart: always
  #   networks:
  #     - app-network
  
  # logging:
  #   image: madhurprakash/fastapi_logging
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - app-network

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - "8025:8025"
  #     - "1025:1025"
  #   restart: always
  #   networks:
  #     - app-network

  # auth:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8005:8005"
  #   depends_on:
  #     - kafka
  #     - redis
  #     - mongo
  #   environment:
  #     - KAFKA_BOOTSTRAP_SERVERS=localhost:9092  # Point to the Kafka service
  #     - REDIS_HOST=redis
  #     - MONGO_URI=mongodb://root:example@mongo:27017/
  #   networks:
  #     - app-network

# networks:
#   app-network:
#     driver: bridge