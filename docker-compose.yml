# --------------------------------------------------------------- New Version -----------------------------------------------------------------------------------
version: '3.8'
services:

  mongo:
    image: mongo:6.0  # pin version to avoid surprises
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db  # persist data

  mongo-express:
    image: mongo-express:1.0.0
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  redis:
    image: redis:7.0-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  logging:
    image: madhurprakash/fastapi_logging:latest
    restart: unless-stopped
    ports:
      - "8000:8000"

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"

  authentication:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8005:8005"
    volumes:
      - .:/authentication
    depends_on:
      - kafka
      - redis
      - mongo
      # add other environment variables from your .env here or mount .env file below
    env_file:
      - .env   # make sure your env file is in the same dir or adjust path

volumes:
  mongo-data:
  redis-data:


# -------------------------------------------------------------------------------------------------------------------------------------









# -------------------------------------------------------------------------- Old Version --------------------------------------------------------------------------
# version: '3'
# services:

#   # mongo:
#   #   image: mongo
#   #   restart: always
#   #   environment:
#   #     MONGO_INITDB_ROOT_USERNAME: root
#   #     MONGO_INITDB_ROOT_PASSWORD: example
#   #   networks:
#   #     - app-network

#   # mongo-express:
#   #   image: mongo-express
#   #   restart: always
#   #   ports:
#   #     - 8081:8081
#   #   environment:
#   #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
#   #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
#   #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#   #     ME_CONFIG_BASICAUTH: false
#   #   depends_on:
#   #     - mongo
#   #   networks:
#   #     - app-network

#   zookeeper:
#     image: wurstmeister/zookeeper
#     ports:
#       - "2181:2181"
#     # networks:
#     #   - app-network

#   kafka:
#     image: wurstmeister/kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     depends_on:
#       - zookeeper
#     # networks:
#     #   - app-network
    
#   # redis:
#   #   image: redis
#   #   ports:
#   #     - "6379:6379"
#   #     - "8001:8001"
#   #   restart: always
#   #   networks:
#   #     - app-network
  
#   # logging:
#   #   image: madhurprakash/fastapi_logging
#   #   ports:
#   #     - "8000:8000"
#   #   networks:
#   #     - app-network

#   # mailhog:
#   #   image: mailhog/mailhog
#   #   ports:
#   #     - "8025:8025"
#   #     - "1025:1025"
#   #   restart: always
#   #   networks:
#   #     - app-network

#   # auth:
#   #   build: 
#   #     context: .
#   #     dockerfile: Dockerfile
#   #   ports:
#   #     - "8005:8005"
#   #   depends_on:
#   #     - kafka
#   #     - redis
#   #     - mongo
#   #   environment:
#   #     - KAFKA_BOOTSTRAP_SERVERS=localhost:9092  # Point to the Kafka service
#   #     - REDIS_HOST=redis
#   #     - MONGO_URI=mongodb://root:example@mongo:27017/
#   #   networks:
#   #     - app-network

# # networks:
# #   app-network:
# #     driver: bridge

# -----------------------------------------------------------------------------------------------------------------------------------